<?
/**
* Payment_History Management Model
* This is a model class for variant Groups
* @author Mustafa Mahmood
* @category Menu
* 
*/
class Payment_History_Model extends Model
{
	/**
	 * Enter description here...
	 *
	 * @return Page_Model
	 */
	function Payment_History_Model()
	{
		parent::Model();
	}
	/*
	Add		
	*/
	
	function addNewPayment_History($arrInfo)
	{
      	$this->db->insert("payment_history", $arrInfo);  
		return $this->db->insert_id();
	}


	/*
	Update
	*/
	function updatePayment_History($arrInfo)
	{
		$this->db->where(array("id"=>$arrInfo["id"]));
//		$this->db->where("1");
		$this->db->set($arrInfo); 
		$this->db->update("payment_history");
	}

	/*
	Delete
	*/
	function deletePayment_History($arrInfo)
	{
		$this->db->where('id',$arrInfo["id"]);
		$this->db->delete("payment_history"); 		
	}

	/**
	* @method This method is returning Menu Items for a Restaurant 
	* @params Item Id will be passed as parameter
	*/
	function getPayment_Historys($payHistoryFilter,$limit = NULL, $offset = NULL)
	{
		if (isset($payHistoryFilter["restaurant_id"]))
			$this->db->where(array('restaurant_id'=>$payHistoryFilter["restaurant_id"]));

		if (isset($payHistoryFilter["month"]))
			$this->db->where(array('month(start)'=>$payHistoryFilter["month"]));
		
		if (isset($payHistoryFilter["year"]))
			$this->db->where(array('year(start)'=>$payHistoryFilter["year"]));
			

			
		if (isset($payHistoryFilter["sortby"]))
			$this->db->orderby($payHistoryFilter["sortby"], "desc");
		else
			$this->db->orderby("id", "desc");
		

//		$this->db->where('1'); 
		
		
		if ($payHistoryFilter["count"]	==	"Yes")
		{
			$this->db->select('count(*) countrecords');
		}
		else
		{
			$this->db->select('payment_history.*');
			if ($payHistoryFilter["isExport"]	==	"Yes")
			{
			}
			else
				$this->db->limit($limit, $offset);
		}
		$this->db->from('payment_history');
//		$this->db->join('restaurant', 'restaurant.id = payment_history.restaurant_id');

//		$this->db->where("1");

		$query=$this->db->get();
		
		
		// Declare Array to pass data
		$list = array();
//		print_r ($payHistoryFilter);
		if ($payHistoryFilter["isExport"]	==	"Yes")
		{
			$this->load->dbutil();
			$csvData	=	"\n\n\n ,,,Month, Total number of orders, Total amount, Starvved Fees, Net payable to restaurant, Status \n";

			foreach ($query->result_array() as $row)
			{
				$payable	=	$row["total"]-$row["comission"];
				$csvData	.=	",,,".date("F Y",strtotime($row["start"])).", ".$row["order_count"].", $".$row["total"].", $".$row["comission"].", $".$payable.", ".$row["status"]."\n";
			}

/*			$csvData	=	$this->dbutil->csv_from_result($query);
*/
			// Load the download helper and send the file to your desktop
			$this->load->helper('download');
			$fileName	=	"order_data_".date("Y-m-d H:i:s").".csv";
			force_download($fileName, $csvData); 						
		}
		
		if ($payHistoryFilter["count"]	==	"Yes")
		{
			foreach ($query->result_array() as $row)
			{
				return $row["countrecords"];
			}
			
		}
		else
		{
			foreach ($query->result_array() as $row)
			{
				$list[]	=	$row;
			}		
		// Return Array
			return $list;
		}
	}

	/**
	* @method This method will return specific menu item details 
	* @params Item Id will be passed as parameter
	*/
	function getPayment_HistoryById($Id,$all="Yes")
	{
		if ($all	==	"Yes")
		$this->db->select('*');
		else
		$this->db->select('payment_history.*');
		$this->db->from("payment_history");
		$this->db->where('payment_history.id',$Id);
//		$this->db->where("1");
		
		$query = $this->db->get();
	
		$arrList	=	$query->result_array();

		return $arrList[0];
	}

}
?>